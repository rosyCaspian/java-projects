{"remainingRequest":"/Users/caspian/Desktop/银行业务处理模拟平台/view/node_modules/babel-loader/lib/index.js!/Users/caspian/Desktop/银行业务处理模拟平台/view/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/caspian/Desktop/银行业务处理模拟平台/view/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/caspian/Desktop/银行业务处理模拟平台/view/src/components/Transaction.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/caspian/Desktop/银行业务处理模拟平台/view/src/components/Transaction.vue","mtime":1603001747807},{"path":"/Users/caspian/Desktop/银行业务处理模拟平台/view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caspian/Desktop/银行业务处理模拟平台/view/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/caspian/Desktop/银行业务处理模拟平台/view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caspian/Desktop/银行业务处理模拟平台/view/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Transaction.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"container\">\n        <el-row class=\"top\">\n            <el-col :span=\"titlesize\">\n            <div class=\"top-title\">Transaction System</div>\n            </el-col>\n            <el-col :span=\"buttonsize\" class=\"controll-button\">\n                <el-button :type=\"buttontype\" round  @click=\"flash();start()\" :disabled=\"inprocess\">{{buttontitle}}</el-button>\n            </el-col>\n            <el-col :span=\"roundsize\" class=\"controll-button\">\n                <div class=\"up\">Round</div>\n                <div class=\"down\">{{round}}</div>\n            </el-col>\n        </el-row>\n        <el-row class=\"content\">\n            <el-col :span=\"12\">\n                <transdialog type=\"Deposit into current account\" icon=\"el-icon-wallet\" class=\"dialog\" color=\"in-color\" :records=\"records_deposit_current\"></transdialog>\n            </el-col>\n            <el-col :span=\"12\">\n                <transdialog type=\"Withdrawal from current account\" icon=\"el-icon-bank-card\" class=\"dialog\" color=\"in-color\" :records=\"records_withdrawal_current\"></transdialog>\n            </el-col>\n        </el-row>\n        <el-row class=\"content\">\n            <el-col :span=\"12\">\n                <transdialog type=\"Deposit into savings account\" icon=\"el-icon-wallet\" class=\"dialog\" color=\"out-color\" :records=\"records_deposit_savings\"></transdialog>\n            </el-col>\n            <el-col :span=\"12\">\n                <transdialog type=\"Withdrawal from savings account\" icon=\"el-icon-bank-card\" class=\"dialog\" color=\"out-color\" :records=\"records_withdrawal_savings\"></transdialog>\n            </el-col>\n        </el-row>\n        <el-row class=\"content\">\n            <el-col :span=\"24\">\n                <transdialoglog type=\"Pay monies\" icon=\"el-icon-wallet\" class=\"dialog\" color=\"out-color\" :records=\"records_pay_monies\"></transdialoglog>\n            </el-col>\n        </el-row>\n        <!-- <el-row class=\"content\">\n            <el-col :span=\"24\">\n                <transdialog type=\"Pay monies\" icon=\"el-icon-wallet\" class=\"dialog\" color=\"\"></transdialog>\n            </el-col>\n        </el-row> -->\n        <!-- <el-col :span=\"12\">\n                <transdialog type=\"Create a standing order\" icon=\"el-icon-wallet\" class=\"dialog\" color=\"\"></transdialog>\n            </el-col> -->\n    </div>\n</template>\n\n<script>\nimport transdialog from './TransDialog';\nimport transdialoglog from './TransDialogLog';\nexport default {\n    name: 'transaction',\n    data: function(){\n        return {\n            round: 0,\n            maxRound: 10,\n            buttontitle: 'Start',\n            buttontype: 'warning',\n            inprocess: false,\n            titlesize: 18,\n            buttonsize: 3,\n            roundsize: 3,\n            records: [],\n            records_deposit_current: [],\n            records_withdrawal_current: [],\n            records_deposit_savings:[],\n            records_withdrawal_savings:[],\n            records_pay_monies: []\n        }\n    },\n    components:{transdialog,transdialoglog},\n    mounted(){\n        this.$http.get(\"/api/process/record\").then(function(res) {\n            console.log(\"success\");\n            this.round = res.body[res.body.length-1].round;\n            this.records = res.body;\n            this.records_deposit_current = res.body.reduce((total, current) => {\n                current.type === \"depositCurrentAccount\" && total.push(current);\n                return total;\n            }, []);\n            this.records_withdrawal_current = res.body.reduce((total, current) => {\n                current.type === \"withdrawalCurrentAccount\" && total.push(current);\n                return total;\n            }, []);\n            this.records_deposit_savings = res.body.reduce((total, current) => {\n                current.type === \"depositSavingsAccount\" && total.push(current);\n                return total;\n            }, []);\n            this.records_withdrawal_savings = res.body.reduce((total, current) => {\n                current.type === \"withdrawSavingsAccount\" && total.push(current);\n                return total;\n            }, []);\n            this.records_pay_monies = res.body.reduce((total, current) => {\n                current.type === \"payMonies\" && total.push(current);\n                return total;\n            }, []);\n        },function(res) {\n          console.log('fail...', res);\n        });\n    },\n    methods:{\n        update_s(){\n            this.$http.get(\"/api/process/record\").then(function(res) {\n                console.log(\"update success\");\n                this.round = res.body[res.body.length-1].round;\n                this.records = res.body;\n                this.records_deposit_current = res.body.reduce((total, current) => {\n                current.type === \"depositCurrentAccount\" && total.push(current);\n                return total;\n                }, []);\n                this.records_withdrawal_current = res.body.reduce((total, current) => {\n                current.type === \"withdrawalCurrentAccount\" && total.push(current);\n                return total;\n                }, []);\n                this.records_deposit_savings = res.body.reduce((total, current) => {\n                current.type === \"depositSavingsAccount\" && total.push(current);\n                return total;\n                }, []);             \n                this.records_withdrawal_savings = res.body.reduce((total, current) => {\n                current.type === \"withdrawSavingsAccount\" && total.push(current);\n                return total;\n                }, []);\n                this.records_pay_monies = res.body.reduce((total, current) => {\n                current.type === \"payMonies\" && total.push(current);\n                return total;\n                }, []);\n            })\n        },\n        update(){\n            this.$http.get(\"/api/process/record\").then(function(res) {\n                console.log(\"update success\");\n                this.round = res.body[res.body.length-1].round;\n                this.records = res.body;\n                this.records_deposit_current = res.body.reduce((total, current) => {\n                current.type === \"depositCurrentAccount\" && total.push(current);\n                return total;\n                }, []);\n                this.records_withdrawal_current = res.body.reduce((total, current) => {\n                current.type === \"withdrawalCurrentAccount\" && total.push(current);\n                return total;\n                }, []);\n                this.records_deposit_savings = res.body.reduce((total, current) => {\n                current.type === \"depositSavingsAccount\" && total.push(current);\n                return total;\n                }, []);             \n                this.records_withdrawal_savings = res.body.reduce((total, current) => {\n                current.type === \"withdrawSavingsAccount\" && total.push(current);\n                return total;\n                }, []);\n                this.records_pay_monies = res.body.reduce((total, current) => {\n                current.type === \"payMonies\" && total.push(current);\n                return total;\n                }, []);\n                console.log(\"round \", this.round)\n                this.update_s();\n                if((this.round >= 10) && ((this.round % 10)===0)){\n                    this.buttontitle = 'Phrase';\n                    this.buttontype = 'success';\n                    this.titlesize = 18;\n                    this.buttonsize = 3;\n                    this.inprocess = false;\n                }\n                if(this.round < this.maxRound){\n                    setTimeout(()=>{\n                        this.update_s();\n                        this.start();\n                    }, 5000);\n                }else{\n                    this.maxRound = this.maxRound + 10; \n                    console.log(this.maxRound)\n                }\n            },function(res) {\n                console.log('fail...', res);\n            });\n        },\n        process(){\n            console.log(\"process start\")\n            this.$http.get(\"/api/process/start\").then(function(res) {\n                console.log(\"processing...\");\n                var r = res.body;\n                const loading = this.$loading({\n                    lock: true,\n                    text: r.transaction_type + \" is chosen~\",\n                    spinner: 'el-icon-loading',\n                    background: 'rgba(0, 0, 0, 0.8)',\n                });\n/*                 setTimeout(() => {\n                    loading.close();\n                }, 2000); */\n                setTimeout(() => {\n                    loading.close();\n                    var message;\n                    var message_2;\n                    if (r.type_of_customer !== \"payMonies\"){\n                        message = r.name + \"'s \" + r.type_of_customer + \" \" + r.overall + \".00\";\n                        this.$message({\n                            showClose: true,\n                            message: message,\n                            type: 'success',\n                            duration: 3600,\n                        });\n                    }else{\n                        message = r.name_1 + \"'s Current Account - £\" + r.overall+ \".00\"\n                        message_2 = r.name_2 + \"'s Current Account + £\" + r.overall + \".00\";\n                        this.$message({\n                            showClose: true,\n                            message: message,\n                            type: 'success',\n                            duration: 2000,\n                        });\n                        setTimeout(() => {\n                            this.$message({\n                                showClose: true,\n                                message: message_2,\n                                type: 'success',\n                                duration: 2000,\n                            });  \n                        }, 2200);\n                        \n                    }\n                    // 更新数据\n                    this.update();\n                }, 2600);\n                },function(res) {\n                    console.log('fail...', res);\n                },);\n        },\n        flash(){\n            if(this.buttontitle === 'Start')\n            {\n                try {\n                    this.maxRound = this.records[this.records.length-1].round + 10;\n                }\n                catch(err){\n                    console.log('null');\n                    this.maxRound = 10;\n                }\n                this.buttontitle = 'Processing';\n                this.inprocess = true;\n                this.buttontype = 'info';\n                this.titlesize = 17;\n                this.buttonsize = 4;\n                console.log(this.maxRound)\n            }\n        },\n        start(){\n            this.update_s();\n            if(this.buttontitle !== 'Phrase')\n            {\n                const loading1 = this.$loading({\n                text: 'Transaction in progress...',\n                spinner: 'el-icon-loading',\n                background: 'rgba(0, 0, 0, 0.8)',\n                });\n                setTimeout(() => {\n                    loading1.close();\n                }, 1800);\n                setTimeout(() => {\n                    this.process();\n                }, 2000);\n            }else{\n                this.$http.get(\"/api/process/phrase\").then(function(res) {\n                    console.log(res.status);\n                });\n                this.buttontitle = 'Start';\n                this.buttontype = 'warning';\n                const h = this.$createElement;\n                this.$notify({\n                    type: 'success',\n                    title: 'Bank phrase success',\n                    offset: 105,\n                    duration: 2600,\n                    message: h('i', { style: 'color: teal'}, 'Interest has been calculated and distributed to user accounts～')\n                });\n                setTimeout(() => {\n                    this.$router.push('/users')\n                }, 2600);\n            }\n                \n        },\n\n        /* choose(){\n            const loading = this.$loading({\n                lock: true,\n                text: 'Withdrawal from savings account is chosen～',\n                spinner: 'el-icon-loading',\n                background: 'rgba(0, 0, 0, 0.8)',\n            });\n            setTimeout(() => {\n                loading.close();\n                this.process();\n            }, 2600);\n        } */\n    }\n}\n</script>\n\n<style scoped>\ndiv{\n    margin:0;\n    padding:0;\n}\n.top {\n    background-color: #fff;\n    margin-top: -2.8rem;\n    margin-bottom: 3rem;\n    border-bottom-right-radius: 1.2rem;\n    \n}\n.top-title{\n    background-color: #fff;\n    height:6rem;\n    font-size: 2.5rem;\n    font-weight: bold;\n    text-align: start;\n    padding-left: 2rem;\n    padding-top: 1.3rem;\n    color: #2763d5;\n}\n.controll-button{\n    background-color: #fff;\n}\n.el-button{\n    font-weight: bold;\n    font-size: 1.27rem;\n    margin-top: 1.9rem;\n}\n.up{\n    text-align: start;\n    font-size: 1.1rem;\n    font-weight: bold;\n    color: #b0b0bb;\n    background-color: #fff;\n    margin-bottom: .2rem;\n    padding-left: 0rem;\n    margin-top: 1rem;\n}\n.down{\n    text-align: start;\n    margin-top: 0.5rem;\n    font-size: 2rem;\n    font-weight: bold;\n    color: #272532;\n    background-color: #fff;\n    padding-left: .6rem;\n}\n.container{\n    margin-top: 3rem;\n    margin-left: 4.5rem;\n    display: flex;\n    flex-direction: column;\n}\n\n\n.dialog{\n    margin: 1.2rem;\n}\n\n</style>"],"sourceRoot":"src/components"}]}