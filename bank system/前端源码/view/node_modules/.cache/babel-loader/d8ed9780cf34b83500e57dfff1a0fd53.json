{"remainingRequest":"/Users/caspian/Desktop/bank/前端源码/view/node_modules/thread-loader/dist/cjs.js!/Users/caspian/Desktop/bank/前端源码/view/node_modules/babel-loader/lib/index.js!/Users/caspian/Desktop/bank/前端源码/view/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/caspian/Desktop/bank/前端源码/view/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/caspian/Desktop/bank/前端源码/view/src/components/Transaction.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/caspian/Desktop/bank/前端源码/view/src/components/Transaction.vue","mtime":1606133063481},{"path":"/Users/caspian/Desktop/bank/前端源码/view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caspian/Desktop/bank/前端源码/view/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caspian/Desktop/bank/前端源码/view/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/caspian/Desktop/bank/前端源码/view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caspian/Desktop/bank/前端源码/view/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}