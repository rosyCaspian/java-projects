{"remainingRequest":"/Users/caspian/Desktop/view/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/caspian/Desktop/view/src/components/Transaction.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/caspian/Desktop/view/src/components/Transaction.vue","mtime":1606128240755},{"path":"/Users/caspian/Desktop/view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caspian/Desktop/view/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caspian/Desktop/view/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/caspian/Desktop/view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caspian/Desktop/view/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}